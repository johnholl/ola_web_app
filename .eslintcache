[{"/home/john/ReactProjects/ola_web_app/src/index.tsx":"1","/home/john/ReactProjects/ola_web_app/src/reportWebVitals.ts":"2","/home/john/ReactProjects/ola_web_app/src/App.tsx":"3","/home/john/ReactProjects/ola_web_app/src/store/index.ts":"4","/home/john/ReactProjects/ola_web_app/src/components/Header/Header.tsx":"5","/home/john/ReactProjects/ola_web_app/src/components/Map/Map.tsx":"6","/home/john/ReactProjects/ola_web_app/src/components/Search/Search.tsx":"7","/home/john/ReactProjects/ola_web_app/src/components/Preview/Preview.tsx":"8","/home/john/ReactProjects/ola_web_app/src/components/Form/Form.tsx":"9","/home/john/ReactProjects/ola_web_app/src/components/Map/AddMarker.tsx":"10","/home/john/ReactProjects/ola_web_app/src/store/reducers/index.ts":"11","/home/john/ReactProjects/ola_web_app/src/store/actions/index.ts":"12","/home/john/ReactProjects/ola_web_app/src/store/reducers/places.ts":"13","/home/john/ReactProjects/ola_web_app/src/store/reducers/search.ts":"14","/home/john/ReactProjects/ola_web_app/src/store/actions/places.ts":"15","/home/john/ReactProjects/ola_web_app/src/store/actions/search.ts":"16","/home/john/ReactProjects/ola_web_app/src/firebase.tsx":"17","/home/john/ReactProjects/ola_web_app/src/store/models.ts":"18","/home/john/ReactProjects/ola_web_app/src/components/PublicPage.tsx":"19","/home/john/ReactProjects/ola_web_app/src/components/AdminPage.tsx":"20","/home/john/ReactProjects/ola_web_app/src/components/Login.tsx":"21","/home/john/ReactProjects/ola_web_app/src/components/AdminMap/Map.tsx":"22","/home/john/ReactProjects/ola_web_app/src/components/AdminPreview/Preview.tsx":"23","/home/john/ReactProjects/ola_web_app/src/components/AdminForm/Form.tsx":"24","/home/john/ReactProjects/ola_web_app/src/components/AdminMap/AddMarker.tsx":"25","/home/john/ReactProjects/ola_web_app/src/utils.tsx":"26","/home/john/ReactProjects/ola_web_app/src/providers/UserProvider.tsx":"27"},{"size":616,"mtime":1624586339107,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1624586339107,"results":"30","hashOfConfig":"29"},{"size":702,"mtime":1627666783868,"results":"31","hashOfConfig":"29"},{"size":225,"mtime":1624586339107,"results":"32","hashOfConfig":"29"},{"size":990,"mtime":1624586339103,"results":"33","hashOfConfig":"29"},{"size":4970,"mtime":1628260363322,"results":"34","hashOfConfig":"29"},{"size":1517,"mtime":1626899155781,"results":"35","hashOfConfig":"29"},{"size":1586,"mtime":1627918528383,"results":"36","hashOfConfig":"29"},{"size":6935,"mtime":1627918408878,"results":"37","hashOfConfig":"29"},{"size":1257,"mtime":1625177663262,"results":"38","hashOfConfig":"29"},{"size":156,"mtime":1624586339107,"results":"39","hashOfConfig":"29"},{"size":52,"mtime":1624586339107,"results":"40","hashOfConfig":"29"},{"size":1288,"mtime":1626899270263,"results":"41","hashOfConfig":"29"},{"size":460,"mtime":1624586339107,"results":"42","hashOfConfig":"29"},{"size":1090,"mtime":1624636756122,"results":"43","hashOfConfig":"29"},{"size":172,"mtime":1624586339107,"results":"44","hashOfConfig":"29"},{"size":598,"mtime":1626887197153,"results":"45","hashOfConfig":"29"},{"size":542,"mtime":1626794902665,"results":"46","hashOfConfig":"29"},{"size":346,"mtime":1627419580657,"results":"47","hashOfConfig":"29"},{"size":533,"mtime":1627261906585,"results":"48","hashOfConfig":"29"},{"size":2097,"mtime":1626833530312,"results":"49","hashOfConfig":"29"},{"size":5195,"mtime":1628257715061,"results":"50","hashOfConfig":"29"},{"size":2013,"mtime":1628257647208,"results":"51","hashOfConfig":"29"},{"size":4465,"mtime":1626830436722,"results":"52","hashOfConfig":"29"},{"size":1257,"mtime":1626830346314,"results":"53","hashOfConfig":"29"},{"size":344,"mtime":1626897791172,"results":"54","hashOfConfig":"29"},{"size":611,"mtime":1627836388927,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"qmqtun",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},"/home/john/ReactProjects/ola_web_app/src/index.tsx",[],["116","117"],"/home/john/ReactProjects/ola_web_app/src/reportWebVitals.ts",[],"/home/john/ReactProjects/ola_web_app/src/App.tsx",[],"/home/john/ReactProjects/ola_web_app/src/store/index.ts",[],"/home/john/ReactProjects/ola_web_app/src/components/Header/Header.tsx",[],["118","119"],"/home/john/ReactProjects/ola_web_app/src/components/Map/Map.tsx",["120","121","122","123","124","125","126","127"],"/home/john/ReactProjects/ola_web_app/src/components/Search/Search.tsx",[],"/home/john/ReactProjects/ola_web_app/src/components/Preview/Preview.tsx",[],"/home/john/ReactProjects/ola_web_app/src/components/Form/Form.tsx",["128","129"],"import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { message, Upload, Button, Spin, Row, Tooltip} from \"antd\";\nimport { LoadingOutlined, UploadOutlined, InfoCircleOutlined} from '@ant-design/icons';\nimport { setPlaceFormVisibility } from \"../../store/actions\";\nimport { IState } from \"../../store/models\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport \"./Form.css\";\nimport { Field, Formik, Form as FormikForm } from \"formik\";\nimport { LatLng } from \"leaflet\";\nimport { storage, functions } from \"../../firebase\";\nimport makeId from \"../../utils\";\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nconst addMarker = functions.httpsCallable(\"addMarker\"); \n\nconst Form = ({\n  isVisible,\n  position,\n  closeForm,\n}: {\n  isVisible: boolean;\n  position: LatLng;\n  closeForm: Function;\n}) => {\n\n  const [photoUrl, setPhotoUrl] = useState(false);\n  const [photoName, setPhotoName] = useState(\"\");\n  const [photoLoading, setPhotoLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  const initialValues = {\n    key: \"\",\n    title: \"\",\n    description: \"\",\n    quantity: \"\"\n  };\n\n  const validator = (values: PlaceFormProps) => {\n    const keys = Object.keys(values);\n    return keys.reduce((prev, curr) => {\n      if (!values[curr] && curr !=\"description\") {\n        return { ...prev, [curr]: \"required\" };\n      }\n      return prev;\n    }, {});\n  };\n\n  const handleOnSubmit = async (values: PlaceFormProps, {resetForm}:{resetForm: any}) => {\n    setSubmitting(true);\n    const result = await addMarker({photoUrl: photoUrl, \n      photoName: photoName,\n      key: values.key,\n      title: values.title, \n      description: values.description,\n      quantity: values.quantity,\n      position: position,\n      hide: false})\n    setPhotoUrl(false);\n    setPhotoName(\"\");\n    setSubmitting(false);\n    closeForm();\n    resetForm();\n  }\n\n    const customUpload = async (options : any) => {\n      const metadata = {\n          contentType: 'image/jpeg'\n      }\n      const storageRef = storage.ref();\n      const imageName = makeId(8); //a unique name for the image\n      const imgFile = storageRef.child(`${imageName}`);\n      try {\n        const image = await imgFile.put(options.file, metadata);\n        const url = await image.ref.getDownloadURL();\n        setPhotoUrl(url);\n        setPhotoName(imageName)\n        setPhotoLoading(false);\n        options.onSuccess(null, image);\n      } catch(e) {\n        options.onError(e);\n      }\n    };\n\n    const beforeUpload = (file: any) => {\n      const isImage = file.type.indexOf('image/') === 0;\n      if (!isImage) {\n        message.error('You can only upload image files');\n      }\n      \n      const isLt20M = file.size / 1024 / 1024 < 20;\n      if (!isLt20M) {\n        message.error('Image must smaller than 20MB');\n      }\n      return isImage && isLt20M;\n    };\n\n    const onChange = (info: any) => {\n      if (info.file.status === 'uploading') {\n        setPhotoLoading(true);\n        return;\n      }\n      if (info.file.status === 'done') {\n        setPhotoLoading(false);\n      };\n      }\n\n  return (\n    <div\n      className={`form__container form__container--${isVisible && \"active\"}`}\n    >\n      <div className=\"form__header\">\n        <span\n          className=\"form__header__close\"\n          role=\"button\"\n          onClick={() => closeForm()}\n        >\n          <AiFillCloseCircle />\n        </span>\n        <span className=\"form__header__title\">\n          <Tooltip title=\"Information in this form, including images, may be used by Ola Filters in social media posts\">\n            <InfoCircleOutlined/>\n          </Tooltip>\n          <span style={{paddingLeft: 10}}>Add / Agregar</span>\n        </span>\n      </div>\n      <Formik\n        initialValues={initialValues}\n        validate={(validator)}\n        onSubmit={handleOnSubmit}\n      >\n        {({ errors, touched, isValidating }) => (\n          <FormikForm>\n            <div className=\"formGroup\">\n              <div className=\"formGroupInput\">\n                <label htmlFor=\"key\">Partner Key / Clave de Socio</label>\n                <Field id=\"key\" name=\"key\" placeholder=\"\" />\n              </div>\n              {errors.key && <div className=\"errors\">Required</div>}\n            </div>\n            <div className=\"formGroup\">\n              <div className=\"formGroupInput\" >\n                <label htmlFor=\"key\">Add Image / Añadir Imagen</label>\n                <Row align=\"middle\" justify=\"start\">\n                  <Upload onChange={onChange} beforeUpload={beforeUpload} customRequest={customUpload}><Button icon={<UploadOutlined />}>{!photoLoading ? \"Upload / Subir\" : <Spin indicator={antIcon} style={{ paddingLeft: 10 }} />}</Button></Upload>\n                  {/* <div>{photoUrl && <CheckCircleOutlined style={{color:\"darkgreen\", fontSize:\"24px\"}}/>}</div> */}\n                </Row>\n              </div>\n            </div>\n            <div className=\"formGroup\">\n              <div className=\"formGroupInput\">\n                <label htmlFor=\"title\"> Title / Título</label>\n                <Field id=\"title\" name=\"title\" placeholder=\"\" />\n              </div>\n              {errors.title && <div className=\"errors\">Required</div>}\n            </div>\n            <div className=\"formGroup\">\n              <div className=\"formGroupInput\">\n                <label htmlFor=\"description\">Description / Descripción</label>\n                <Field\n                  id=\"description\"\n                  name=\"description\"\n                  placeholder=\"\"\n                />\n              </div>\n              {errors.description && <div className=\"errors\">Required</div>}\n            </div>\n            <div className=\"formGroup\">\n              <div className=\"formGroupInput\">\n                <label htmlFor=\"quantity\">Quantity / Cantidad</label>\n                <Field\n                  id=\"quantity\"\n                  name=\"quantity\"\n                  placeholder=\"\"\n                />\n              </div>\n              {errors.quantity && <div className=\"errors\">Required</div>}\n            </div>\n            <div className=\"button__container\">\n              <button className=\"form__button\" type=\"submit\" style={{backgroundColor:\"#52b2bf\"}}>\n                {submitting ? <Spin indicator={antIcon} style={{ paddingLeft: 10 }} /> : \"Submit / Enviar\"}</button>\n            </div>\n          </FormikForm>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IState) => {\n  const { places } = state;\n  return {\n    isVisible: places.placeFormIsVisible,\n    position: places.prePlacePosition as LatLng,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    closeForm: () =>\n      dispatch(setPlaceFormVisibility(false)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n\ninterface PlaceFormProps {\n  [key: string]: string;\n  title: string;\n  description: string;\n}\n","/home/john/ReactProjects/ola_web_app/src/components/Map/AddMarker.tsx",[],"/home/john/ReactProjects/ola_web_app/src/store/reducers/index.ts",[],"/home/john/ReactProjects/ola_web_app/src/store/actions/index.ts",[],"/home/john/ReactProjects/ola_web_app/src/store/reducers/places.ts",[],"/home/john/ReactProjects/ola_web_app/src/store/reducers/search.ts",[],"/home/john/ReactProjects/ola_web_app/src/store/actions/places.ts",[],"/home/john/ReactProjects/ola_web_app/src/store/actions/search.ts",[],"/home/john/ReactProjects/ola_web_app/src/firebase.tsx",[],"/home/john/ReactProjects/ola_web_app/src/store/models.ts",[],"/home/john/ReactProjects/ola_web_app/src/components/PublicPage.tsx",[],"/home/john/ReactProjects/ola_web_app/src/components/AdminPage.tsx",[],"/home/john/ReactProjects/ola_web_app/src/components/Login.tsx",["130","131"],"import React, {useState} from 'react';\nimport {Form, Button, Input, Row, Col} from 'antd';\nimport {auth} from \"../firebase\";\n\nexport default function LoginScreen(props: any) {\n    let [errorMessage, setErrorMessage] = useState(null);\n\n    const handleLogin = (values: any) => {\n        auth.signInWithEmailAndPassword(values.email, values.password)\n            .then(() => props.history.push('/Admin'))\n            .catch(error => setErrorMessage(error.message))\n    };\n\n\n\n        return (\n            <>\n            <a href=\"https://www.olafilter.com\">\n                <img src=\"namedlogo.png\" style={{zIndex: 1000, position:\"fixed\", top:10, left:10, width:100, borderRadius:20}}/>\n            </a>\n            <Row justify=\"center\" style={{paddingTop:50}}>\n                <Col>\n                    <Form\n                        name=\"basic\"\n                        labelCol={{ span: 8 }}\n                        wrapperCol={{ span: 16 }}\n                        initialValues={{ remember: true }}\n                        onFinish={handleLogin}\n                        onFinishFailed={()=>console.log(\"Login Failed\")}\n                    >\n                        <Form.Item\n                        label=\"Email\"\n                        name=\"email\"\n                        rules={[{ required: true, message: 'required' }]}\n                        >\n                        <Input />\n                        </Form.Item>\n                \n                        <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[{ required: true, message: 'required' }]}\n                        >\n                        <Input.Password />\n                        </Form.Item>\n                \n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </Row>\n            </>\n\n        )\n}\n","/home/john/ReactProjects/ola_web_app/src/components/AdminMap/Map.tsx",["132","133","134","135","136","137","138","139","140","141","142","143"],"/home/john/ReactProjects/ola_web_app/src/components/AdminPreview/Preview.tsx",[],"/home/john/ReactProjects/ola_web_app/src/components/AdminForm/Form.tsx",["144"],"import { connect } from \"react-redux\";\nimport { setPlaceFormVisibility } from \"../../store/actions\";\nimport { IState } from \"../../store/models\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport \"./Form.css\";\nimport { Field, Formik, Form as FormikForm } from \"formik\";\nimport { LatLng } from \"leaflet\";\nimport { fstore } from \"../../firebase\";\n\nconst Form = ({\n  isVisible,\n  position,\n  closeForm,\n}: {\n  isVisible: boolean;\n  position: LatLng;\n  closeForm: Function;\n}) => {\n\n\n  const initialValues = {\n    key: \"\",\n    picture: \"\",\n    title: \"\",\n    description: \"\",\n    quantity: \"\"\n  };\n\n  const validator = (values: PlaceFormProps) => {\n    const keys = Object.keys(values);\n\n    return keys.reduce((prev, curr) => {\n      if (!values[curr]) {\n        return { ...prev, [curr]: \"required\" };\n      }\n      console.log(prev)\n      return prev;\n    }, {});\n  };\n\n  const handleOnSubmit = (values: PlaceFormProps, {setSubmitting, resetForm}:{setSubmitting: any, resetForm: any}) => {\n    if(values.key==\"VALID\"){\n      fstore.collection(\"publicplaces\").add({\n        ...values,\n        position: [position.lat, position.lng]\n      })\n      closeForm();\n      resetForm();\n    }\n    else{\n      console.log(\"invalid distributor key\");\n      closeForm();\n      resetForm();\n    }\n  }\n\n  return (\n    <div\n      className={`form__container form__container--${isVisible && \"active\"}`}\n    >\n      <div className=\"form__header\">\n        <span\n          className=\"form__header__close\"\n          role=\"button\"\n          onClick={() => closeForm()}\n        >\n          <AiFillCloseCircle />\n        </span>\n        <span className=\"form__header__title\">AGREGAR / ADD </span>\n      </div>\n      <Formik\n        initialValues={initialValues}\n        validate={(validator)}\n        onSubmit={handleOnSubmit}\n      >\n        {({ errors, touched, isValidating }) => (\n          <FormikForm>\n            <div className=\"formGroup\">\n              <div className=\"formGroupInput\">\n                <label htmlFor=\"key\">CLAVE DE SOCIO / PARTNER KEY</label>\n                <Field id=\"key\" name=\"key\" placeholder=\"\" />\n              </div>\n              {errors.key && <div className=\"errors\">Required</div>}\n            </div>\n            <div className=\"formGroup\">\n              <div className=\"formGroupInput\">\n                <label htmlFor=\"picture\">SUBIR FOTO / UPLOAD PICTURE</label>\n                <Field id=\"picture\" name=\"picture\" placeholder=\"\" />\n              </div>\n              {errors.picture && <div className=\"errors\">Required</div>}\n            </div>\n            <div className=\"formGroup\">\n              <div className=\"formGroupInput\">\n                <label htmlFor=\"title\"> TÍTULO / TITLE</label>\n                <Field id=\"title\" name=\"title\" placeholder=\"\" />\n              </div>\n              {errors.title && <div className=\"errors\">Required</div>}\n            </div>\n            <div className=\"formGroup\">\n              <div className=\"formGroupInput\">\n                <label htmlFor=\"description\">DESCRIPCIÓN / DESCRIPTION</label>\n                <Field\n                  id=\"description\"\n                  name=\"description\"\n                  placeholder=\"\"\n                />\n              </div>\n              {errors.description && <div className=\"errors\">Required</div>}\n            </div>\n            <div className=\"formGroup\">\n              <div className=\"formGroupInput\">\n                <label htmlFor=\"quantity\">CANTIDAD / QUANTITY</label>\n                <Field\n                  id=\"quantity\"\n                  name=\"quantity\"\n                  placeholder=\"\"\n                />\n              </div>\n              {errors.quantity && <div className=\"errors\">Required</div>}\n            </div>\n            <div className=\"button__container\">\n              <button className=\"form__button\" type=\"submit\">ENVIAR / SUBMIT</button>\n            </div>\n          </FormikForm>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IState) => {\n  const { places } = state;\n  return {\n    isVisible: places.placeFormIsVisible,\n    position: places.prePlacePosition as LatLng,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    closeForm: () =>\n      dispatch(setPlaceFormVisibility(false)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n\ninterface PlaceFormProps {\n  [key: string]: string;\n  picture: string;\n  title: string;\n  description: string;\n}\n","/home/john/ReactProjects/ola_web_app/src/components/AdminMap/AddMarker.tsx",[],"/home/john/ReactProjects/ola_web_app/src/utils.tsx",[],"/home/john/ReactProjects/ola_web_app/src/providers/UserProvider.tsx",["145","146","147","148"],"import React, {Component, createContext, useContext} from \"react\";\nimport {auth} from \"../firebase\"\n\n\nexport const UserContext = createContext({user: null});\nclass UserProvider extends Component {\n\n    state = {user: null};\n\n\n    componentDidMount() {\n        const {constants, posQuestions, fuQuestions} = this.context;\n        auth.onAuthStateChanged(userAuth => {\n            this.setState({user: userAuth});\n        });\n    }\n\n    render() {return(\n        <UserContext.Provider value={this.state}>\n            {this.props.children}\n        </UserContext.Provider>\n    )\n    }\n}\n\nexport default UserProvider",{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"149","replacedBy":"153"},{"ruleId":"151","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":5,"column":24,"nodeType":"157","messageId":"158","endLine":5,"endColumn":27},{"ruleId":"155","severity":1,"message":"159","line":13,"column":8,"nodeType":"157","messageId":"158","endLine":13,"endColumn":14},{"ruleId":"160","severity":1,"message":"161","line":27,"column":21,"nodeType":"162","messageId":"163","endLine":27,"endColumn":23},{"ruleId":"164","severity":1,"message":"165","line":103,"column":9,"nodeType":"166","endLine":103,"endColumn":121},{"ruleId":"164","severity":1,"message":"165","line":116,"column":71,"nodeType":"166","endLine":116,"endColumn":110},{"ruleId":"164","severity":1,"message":"165","line":117,"column":71,"nodeType":"166","endLine":117,"endColumn":111},{"ruleId":"164","severity":1,"message":"165","line":118,"column":71,"nodeType":"166","endLine":118,"endColumn":117},{"ruleId":"164","severity":1,"message":"165","line":119,"column":71,"nodeType":"166","endLine":119,"endColumn":113},{"ruleId":"167","severity":1,"message":"168","line":43,"column":33,"nodeType":"169","messageId":"170","endLine":43,"endColumn":35},{"ruleId":"155","severity":1,"message":"171","line":52,"column":11,"nodeType":"157","messageId":"158","endLine":52,"endColumn":17},{"ruleId":"155","severity":1,"message":"172","line":6,"column":10,"nodeType":"157","messageId":"158","endLine":6,"endColumn":22},{"ruleId":"164","severity":1,"message":"165","line":19,"column":17,"nodeType":"166","endLine":19,"endColumn":129},{"ruleId":"155","severity":1,"message":"173","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":3,"column":15,"nodeType":"157","messageId":"158","endLine":3,"endColumn":18},{"ruleId":"160","severity":1,"message":"161","line":25,"column":21,"nodeType":"162","messageId":"163","endLine":25,"endColumn":23},{"ruleId":"155","severity":1,"message":"174","line":40,"column":10,"nodeType":"157","messageId":"158","endLine":40,"endColumn":24},{"ruleId":"155","severity":1,"message":"175","line":41,"column":10,"nodeType":"157","messageId":"158","endLine":41,"endColumn":17},{"ruleId":"155","severity":1,"message":"176","line":42,"column":10,"nodeType":"157","messageId":"158","endLine":42,"endColumn":18},{"ruleId":"155","severity":1,"message":"177","line":69,"column":9,"nodeType":"157","messageId":"158","endLine":69,"endColumn":24},{"ruleId":"167","severity":1,"message":"178","line":70,"column":57,"nodeType":"169","messageId":"170","endLine":70,"endColumn":59},{"ruleId":"155","severity":1,"message":"179","line":74,"column":9,"nodeType":"157","messageId":"158","endLine":74,"endColumn":28},{"ruleId":"167","severity":1,"message":"178","line":75,"column":57,"nodeType":"169","messageId":"170","endLine":75,"endColumn":59},{"ruleId":"155","severity":1,"message":"180","line":79,"column":9,"nodeType":"157","messageId":"158","endLine":79,"endColumn":25},{"ruleId":"164","severity":1,"message":"165","line":132,"column":7,"nodeType":"166","endLine":132,"endColumn":119},{"ruleId":"167","severity":1,"message":"178","line":42,"column":18,"nodeType":"169","messageId":"170","endLine":42,"endColumn":20},{"ruleId":"155","severity":1,"message":"181","line":1,"column":42,"nodeType":"157","messageId":"158","endLine":1,"endColumn":52},{"ruleId":"155","severity":1,"message":"182","line":12,"column":16,"nodeType":"157","messageId":"158","endLine":12,"endColumn":25},{"ruleId":"155","severity":1,"message":"183","line":12,"column":27,"nodeType":"157","messageId":"158","endLine":12,"endColumn":39},{"ruleId":"155","severity":1,"message":"184","line":12,"column":41,"nodeType":"157","messageId":"158","endLine":12,"endColumn":52},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],["185"],["186"],"@typescript-eslint/no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'makeid' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'result' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'Row' is defined but never used.","'filteredPlaces' is assigned a value but never used.","'filters' is assigned a value but never used.","'partners' is assigned a value but never used.","'filterByPartner' is assigned a value but never used.","Expected '===' and instead saw '=='.","'filterByPartnerType' is assigned a value but never used.","'filterByQuantity' is assigned a value but never used.","'useContext' is defined but never used.","'constants' is assigned a value but never used.","'posQuestions' is assigned a value but never used.","'fuQuestions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]